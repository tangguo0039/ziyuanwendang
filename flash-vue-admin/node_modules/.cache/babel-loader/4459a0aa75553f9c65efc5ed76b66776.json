{"remainingRequest":"D:\\github\\ziyuanwendang\\flash-vue-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\github\\ziyuanwendang\\flash-vue-admin\\src\\views\\login\\login.js","dependencies":[{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\src\\views\\login\\login.js","mtime":1649735864000},{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\babel.config.js","mtime":1649735864000},{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/github/ziyuanwendang/flash-vue-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nvar _validate = require(\"@/utils/validate\");\n\nvar _utils = require(\"@/utils/utils\");\n\nvar _user = require(\"@/api/user\");\n\nvar _LangSelect = _interopRequireDefault(require(\"@/components/LangSelect\"));\n\nvar _default = {\n  name: 'login',\n  components: {\n    LangSelect: _LangSelect.default\n  },\n  data: function data() {\n    var _this = this;\n\n    var validateUsername = function validateUsername(rule, value, callback) {\n      if (!(0, _validate.isvalidUsername)(value)) {\n        callback(new Error(_this.$t('login.errorAccount')));\n      } else {\n        callback();\n      }\n    };\n\n    var validatePassword = function validatePassword(rule, value, callback) {\n      if (value.length < 3) {\n        callback(new Error(_this.$t('login.errorPassword')));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      qrcode: {\n        activeName: 'first',\n        showAppdownload: false,\n        imgUrl: '',\n        uuid: '',\n        resultStatus: '',\n        msg: '请使用flash-uniapp 扫码登录'\n      },\n      loginForm: {\n        username: '',\n        password: ''\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: 'blur',\n          validator: validateUsername\n        }],\n        password: [{\n          required: true,\n          trigger: 'blur',\n          validator: validatePassword\n        }]\n      },\n      loading: false,\n      pwdType: 'password',\n      redirect: '/'\n    };\n  },\n  mounted: function mounted() {\n    this.init();\n    this.getQrcode();\n  },\n  methods: {\n    init: function init() {\n      var redirect = this.$route.query.redirect;\n\n      if (redirect) {\n        this.redirect = redirect;\n      }\n    },\n    changeLoginType: function changeLoginType(tab) {\n      if (this.qrcode.activeName === 'second') {\n        this.getQrcode();\n        this.getQrcodeResult();\n      }\n    },\n    uuid: function uuid() {\n      function S4() {\n        return ((1 + Math.random()) * 0x10000 | 0).toString(16).substring(1);\n      }\n\n      return S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4();\n    },\n    showAppdownload: function showAppdownload() {\n      this.qrcode.showAppdownload = true;\n    },\n    hideAppdownload: function hideAppdownload() {\n      this.qrcode.showAppdownload = false;\n    },\n    getQrcode: function getQrcode() {\n      this.qrcode.uuid = this.uuid();\n      var url = (0, _utils.getApiUrl)() + '/account/qrcode/generate?uuid=' + this.qrcode.uuid;\n      console.log('getQrcode', url);\n      this.qrcode.imgUrl = url;\n    },\n    refreshQrcode: function refreshQrcode() {\n      this.getQrcode();\n      this.qrcode.resultStatus = '';\n      this.getQrcodeResult();\n    },\n    getQrcodeResult: function getQrcodeResult() {\n      var _this2 = this;\n\n      if (this.qrcode.activeName === 'second') {\n        var me = this;\n        this.sleep(1000).then(function () {\n          (0, _user.getQrcodeStatus)({\n            uuid: me.qrcode.uuid\n          }).then(function (res) {\n            console.log('扫描结果', res);\n            _this2.qrcode.resultStatus = res.data.status;\n\n            if (res.data.status === 'invalid') {\n              _this2.qrcode.showAppdownload = false;\n              me.qrcode.msg = '二维码已过期';\n            }\n\n            if (res.data.status === 'success') {\n              _this2.qrcode.showAppdownload = false;\n              _this2.qrcode.msg = '扫描成功，自动登录中';\n              _this2.loading = true;\n\n              _this2.$store.dispatch('user/autoLogin', {\n                token: res.data.token\n              }).then(function () {\n                _this2.loading = false;\n\n                _this2.$router.push({\n                  path: _this2.redirect\n                });\n              }).catch(function (err) {\n                _this2.qrcode.msg = '登录失败';\n                _this2.loading = false;\n              });\n            }\n\n            if (me.qrcode.activeName === 'second' && res.data.status === 'undo') {\n              me.getQrcodeResult();\n            }\n          }).catch(function (err) {\n            console.log('err', err);\n          });\n        });\n      }\n    },\n    sleep: function sleep(time) {\n      return new Promise(function (resolve) {\n        return setTimeout(resolve, time);\n      });\n    },\n    showPwd: function showPwd() {\n      if (this.pwdType === 'password') {\n        this.pwdType = '';\n      } else {\n        this.pwdType = 'password';\n      }\n    },\n    handleLogin: function handleLogin() {\n      var _this3 = this;\n\n      this.$refs.loginForm.validate(function (valid) {\n        if (valid) {\n          _this3.loading = true;\n\n          _this3.$store.dispatch('user/login', _this3.loginForm).then(function () {\n            _this3.loading = false;\n\n            _this3.$router.push({\n              path: _this3.redirect\n            });\n          }).catch(function (err) {\n            _this3.loading = false;\n          });\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};\nexports.default = _default;",null]}