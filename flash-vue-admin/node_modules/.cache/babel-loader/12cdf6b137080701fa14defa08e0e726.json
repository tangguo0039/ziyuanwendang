{"remainingRequest":"D:\\github\\ziyuanwendang\\flash-vue-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\github\\ziyuanwendang\\flash-vue-admin\\src\\views\\workflow\\task\\task.js","dependencies":[{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\src\\views\\workflow\\task\\task.js","mtime":1649735864000},{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\babel.config.js","mtime":1649735864000},{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/github/ziyuanwendang/flash-vue-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nvar _workFlowRequest = _interopRequireDefault(require(\"@/api/workflow/workFlowRequest\"));\n\nvar _dict = _interopRequireDefault(require(\"@/api/system/dict\"));\n\nvar _processDefinition = _interopRequireDefault(require(\"@/api/workflow/processDefinition\"));\n\nvar _index = _interopRequireDefault(require(\"@/directive/permission/index.js\"));\n\nvar _default = {\n  //如果需要标签页缓存生效，则需要保证name值和菜单管理中的编码值一致\n  name: 'workFlowTask',\n  directives: {\n    permission: _index.default\n  },\n  data: function data() {\n    return {\n      activeName: 'first',\n      formVisible: false,\n      formTitle: '发起新流程',\n      isAdd: true,\n      form: {\n        title: '',\n        processDefId: '',\n        instanceId: '',\n        descript: '',\n        state: '',\n        id: ''\n      },\n      listQuery: {\n        page: 1,\n        limit: 20,\n        id: undefined\n      },\n      processDefinitionList: [],\n      dictStateList: [],\n      total: 0,\n      list: null,\n      listLoading: true,\n      selRow: {},\n      taskResult: {\n        list: []\n      }\n    };\n  },\n  filters: {\n    statusFilter: function statusFilter(status) {\n      var statusMap = {\n        published: 'success',\n        draft: 'gray',\n        deleted: 'danger'\n      };\n      return statusMap[status];\n    }\n  },\n  computed: {\n    //表单验证\n    rules: function rules() {\n      return {// cfgName: [\n        //   { required: true, message: this.$t('config.name') + this.$t('common.isRequired'), trigger: 'blur' },\n        //   { min: 3, max: 2000, message: this.$t('config.name') + this.$t('config.lengthValidation'), trigger: 'blur' }\n        // ]\n      };\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  methods: {\n    init: function init() {\n      var _this = this;\n\n      this.fetchData();\n\n      _dict.default.getDicts('工作流实例状态').then(function (response) {\n        _this.dictStateList = response.data;\n      });\n    },\n    fetchData: function fetchData() {\n      var _this2 = this;\n\n      this.listLoading = true;\n\n      _workFlowRequest.default.getTasks(this.listQuery).then(function (response) {\n        _this2.list = response.data.records;\n        _this2.listLoading = false;\n        _this2.total = response.data.total;\n      });\n    },\n    search: function search() {\n      this.fetchData();\n    },\n    reset: function reset() {\n      this.listQuery.id = '';\n      this.fetchData();\n    },\n    handleFilter: function handleFilter() {\n      this.listQuery.page = 1;\n      this.getList();\n    },\n    handleClose: function handleClose() {},\n    fetchNext: function fetchNext() {\n      this.listQuery.page = this.listQuery.page + 1;\n      this.fetchData();\n    },\n    fetchPrev: function fetchPrev() {\n      this.listQuery.page = this.listQuery.page - 1;\n      this.fetchData();\n    },\n    fetchPage: function fetchPage(page) {\n      this.listQuery.page = page;\n      this.fetchData();\n    },\n    changeSize: function changeSize(limit) {\n      this.listQuery.limit = limit;\n      this.fetchData();\n    },\n    handleCurrentChange: function handleCurrentChange(currentRow, oldCurrentRow) {\n      this.selRow = currentRow;\n    },\n    formatState: function formatState(state) {\n      var ret = '';\n      this.dictStateList.forEach(function (element) {\n        if (state + '' == element.num) {\n          ret = element.name;\n        }\n      });\n      return ret;\n    },\n    resetForm: function resetForm() {\n      this.form = {\n        title: '',\n        processDefId: '',\n        instanceId: '',\n        descript: '',\n        state: '',\n        id: ''\n      };\n    },\n    add: function add() {\n      this.formTitle = '发起新流程';\n      this.formVisible = true;\n      this.isAdd = true;\n\n      if (this.$refs['form'] !== undefined) {\n        this.$refs['form'].resetFields();\n      } //如果表单初始化有特殊处理需求,可以在resetForm中处理\n\n    },\n    pass: function pass() {\n      var _this3 = this;\n\n      this.form.state = 1;\n      console.log('form', this.form);\n\n      _workFlowRequest.default.completeTask(this.form).then(function (response) {\n        _this3.fetchData();\n\n        _this3.formVisible = false;\n      });\n    },\n    reject: function reject() {\n      var _this4 = this;\n\n      this.form.state = 2;\n      console.log('form', this.form);\n\n      _workFlowRequest.default.completeTask(this.form).then(function (response) {\n        _this4.fetchData();\n\n        _this4.formVisible = false;\n      });\n    },\n    save: function save() {\n      var _this5 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          var formData = {\n            id: _this5.form.id,\n            title: _this5.form.title,\n            processDefId: _this5.form.processDefId,\n            instanceId: _this5.form.instanceId,\n            descript: _this5.form.descript,\n            state: _this5.form.state\n          };\n\n          if (formData.id) {\n            _workFlowRequest.default.update(formData).then(function (response) {\n              _this5.$message({\n                message: _this5.$t('common.optionSuccess'),\n                type: 'success'\n              });\n\n              _this5.fetchData();\n\n              _this5.formVisible = false;\n            });\n          } else {\n            _workFlowRequest.default.add(formData).then(function (response) {\n              _this5.$message({\n                message: _this5.$t('common.optionSuccess'),\n                type: 'success'\n              });\n\n              _this5.fetchData();\n\n              _this5.formVisible = false;\n            });\n          }\n        } else {\n          return false;\n        }\n      });\n    },\n    checkSel: function checkSel() {\n      if (this.selRow && this.selRow.id) {\n        return true;\n      }\n\n      this.$message({\n        message: this.$t('common.mustSelectOne'),\n        type: 'warning'\n      });\n      return false;\n    },\n    editItem: function editItem(record) {\n      this.selRow = record;\n      this.edit();\n    },\n    edit: function edit() {\n      if (this.checkSel()) {\n        this.isAdd = false;\n        var form = Object.assign({}, this.selRow);\n        this.form = form;\n        this.formTitle = '编辑流程实例';\n        this.formVisible = true;\n\n        if (this.$refs['form'] !== undefined) {\n          this.$refs['form'].resetFields();\n        } //如果表单初始化有特殊处理需求,可以在resetForm中处理\n\n      }\n    },\n    removeItem: function removeItem(record) {\n      this.selRow = record;\n      this.remove();\n    },\n    remove: function remove() {\n      var _this6 = this;\n\n      if (this.checkSel()) {\n        var id = this.selRow.id;\n        this.$confirm(this.$t('common.deleteConfirm'), this.$t('common.tooltip'), {\n          confirmButtonText: this.$t('button.submit'),\n          cancelButtonText: this.$t('button.cancel'),\n          type: 'warning'\n        }).then(function () {\n          _workFlowRequest.default.remove(id).then(function (response) {\n            _this6.$message({\n              message: _this6.$t('common.optionSuccess'),\n              type: 'success'\n            });\n\n            _this6.fetchData();\n          }).catch(function (err) {\n            _this6.$notify.error({\n              title: '错误',\n              message: err\n            });\n          });\n        }).catch(function () {});\n      }\n    }\n  }\n};\nexports.default = _default;",null]}