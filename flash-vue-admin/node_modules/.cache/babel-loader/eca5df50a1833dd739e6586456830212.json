{"remainingRequest":"D:\\github\\ziyuanwendang\\flash-vue-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\github\\ziyuanwendang\\flash-vue-admin\\src\\views\\cms\\article\\edit.js","dependencies":[{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\src\\views\\cms\\article\\edit.js","mtime":1649735864000},{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\babel.config.js","mtime":1649735864000},{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/github/ziyuanwendang/flash-vue-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nvar _Tinymce = _interopRequireDefault(require(\"@/components/Tinymce\"));\n\nvar _elementUi = require(\"element-ui\");\n\nvar _plugins = _interopRequireDefault(require(\"./plugins\"));\n\nvar _toolbar = _interopRequireDefault(require(\"./toolbar\"));\n\nvar _article = require(\"@/api/cms/article\");\n\nvar _channel = require(\"@/api/cms/channel\");\n\nvar _utils = require(\"@/utils/utils\");\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _default2 = {\n  name: 'editArticle',\n  components: {\n    editorImage: _Tinymce.default\n  },\n  props: {\n    id: {\n      type: String,\n      default: function _default() {\n        return 'vue-tinymce-' + +new Date() + ((Math.random() * 1000).toFixed(0) + '');\n      }\n    },\n    value: {\n      type: String,\n      default: ''\n    },\n    toolbar: {\n      type: Array,\n      required: false,\n      default: function _default() {\n        return [];\n      }\n    },\n    menubar: {\n      type: String,\n      default: 'file edit insert view format table'\n    },\n    height: {\n      type: Number,\n      required: false,\n      default: 360\n    }\n  },\n  data: function data() {\n    return {\n      uploadUrl: '',\n      uploadFileId: '',\n      uploadHeaders: {\n        'Authorization': ''\n      },\n      loadingInstance: {},\n      form: {\n        title: '',\n        author: '',\n        idChannel: '1',\n        content: '',\n        img: ''\n      },\n      articleImg: '',\n      ifUpload: true,\n      options: [],\n      hasChange: false,\n      hasInit: false,\n      tinymceId: this.id,\n      fullscreen: false,\n      languageTypeList: {\n        'en': 'en',\n        'zh': 'zh_CN'\n      }\n    };\n  },\n  computed: {\n    language: function language() {\n      return this.languageTypeList[this.$store.getters.language];\n    }\n  },\n  watch: {\n    value: function value(val) {\n      var _this2 = this;\n\n      if (!this.hasChange && this.hasInit) {\n        this.$nextTick(function () {\n          return window.tinymce.get(_this2.tinymceId).setContent(val || '');\n        });\n      }\n    },\n    language: function language() {\n      var _this3 = this;\n\n      this.destroyTinymce();\n      this.$nextTick(function () {\n        return _this3.initTinymce();\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.init();\n    this.initTinymce();\n  },\n  activated: function activated() {\n    this.initTinymce();\n  },\n  deactivated: function deactivated() {\n    this.destroyTinymce();\n  },\n  destroyed: function destroyed() {\n    this.destroyTinymce();\n  },\n  methods: {\n    init: function init() {\n      var _this4 = this;\n\n      this.uploadUrl = (0, _utils.getApiUrl)() + '/file';\n      this.uploadHeaders['Authorization'] = (0, _auth.getToken)();\n      var id = this.$route.query.id;\n\n      if (id) {\n        (0, _article.get)(id).then(function (response) {\n          _this4.form = response.data;\n\n          _this4.setContent(response.data.content);\n\n          _this4.articleImg = _this4.uploadUrl + '/getImgStream?idFile=' + response.data.img;\n          _this4.ifUpload = false;\n        });\n      }\n\n      (0, _channel.getList)().then(function (response) {\n        _this4.options = response.data;\n      });\n    },\n    initTinymce: function initTinymce() {\n      var _this5 = this;\n\n      var _this = this;\n\n      window.tinymce.init({\n        value: 'aaaaaa',\n        language: this.language,\n        selector: \"#\".concat(this.tinymceId),\n        height: this.height,\n        body_class: 'panel-body ',\n        object_resizing: false,\n        toolbar: this.toolbar.length > 0 ? this.toolbar : _toolbar.default,\n        menubar: this.menubar,\n        plugins: _plugins.default,\n        end_container_on_empty_block: true,\n        powerpaste_word_import: 'clean',\n        code_dialog_height: 450,\n        code_dialog_width: 1000,\n        advlist_bullet_styles: 'square',\n        advlist_number_styles: 'default',\n        imagetools_cors_hosts: ['www.tinymce.com', 'codepen.io'],\n        default_link_target: '_blank',\n        link_title: false,\n        nonbreaking_force_tab: true,\n        // inserting nonbreaking space &nbsp; need Nonbreaking Space Plugin\n        init_instance_callback: function init_instance_callback(editor) {\n          if (_this.value) {\n            editor.setContent(_this.value);\n          }\n\n          _this.hasInit = true;\n          editor.on('NodeChange Change KeyUp SetContent', function () {\n            _this5.hasChange = true;\n            var content = editor.getContent();\n            _this5.form.content = content;\n          });\n        },\n        setup: function setup(editor) {\n          editor.on('FullscreenStateChanged', function (e) {\n            _this.fullscreen = e.state;\n          });\n        }\n      });\n    },\n    destroyTinymce: function destroyTinymce() {\n      var tinymce = window.tinymce.get(this.tinymceId);\n\n      if (this.fullscreen) {\n        tinymce.execCommand('mceFullScreen');\n      }\n\n      if (tinymce) {\n        tinymce.destroy();\n      }\n    },\n    setContent: function setContent(value) {\n      window.tinymce.get(this.tinymceId).setContent(value);\n    },\n    getContent: function getContent() {\n      window.tinymce.get(this.tinymceId).getContent();\n    },\n    imageSuccessCBK: function imageSuccessCBK(arr) {\n      var _this = this;\n\n      arr.forEach(function (v) {\n        window.tinymce.get(_this.tinymceId).insertContent(\"<img class=\\\"wscnph\\\" src=\\\"\".concat(v.url, \"\\\" >\"));\n      });\n    },\n    save: function save() {\n      var _this6 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          var content = _this6.form.content.split('%').join('%25');\n\n          (0, _article.save)({\n            id: _this6.form.id,\n            title: _this6.form.title,\n            author: _this6.form.author,\n            idChannel: _this6.form.idChannel,\n            content: content,\n            img: _this6.form.img\n          }).then(function (response) {\n            _this6.$message({\n              message: _this6.$t('common.optionSuccess'),\n              type: 'success'\n            });\n\n            _this6.back();\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    back: function back() {\n      this.$router.go(-1);\n    },\n    handleBeforeUpload: function handleBeforeUpload() {\n      if (this.uploadFileId !== '') {\n        this.$message({\n          message: this.$t('common.mustSelectOne'),\n          type: 'warning'\n        });\n        return false;\n      }\n\n      this.loadingInstance = _elementUi.Loading.service({\n        lock: true,\n        text: this.$t('common.uploading'),\n        spinner: 'el-icon-loading',\n        background: 'rgba(0, 0, 0, 0.7)'\n      });\n    },\n    handleUploadSuccess: function handleUploadSuccess(response, raw) {\n      this.loadingInstance.close();\n\n      if (response.code === 20000) {\n        this.form.img = response.data.id;\n      } else {\n        this.$message({\n          message: this.$t('common.uploadError'),\n          type: 'error'\n        });\n      }\n    },\n    uploadImg: function uploadImg() {\n      this.ifUpload = !this.ifUpload;\n    }\n  }\n};\nexports.default = _default2;",null]}