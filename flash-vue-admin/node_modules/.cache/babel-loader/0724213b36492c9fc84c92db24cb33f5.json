{"remainingRequest":"D:\\github\\ziyuanwendang\\flash-vue-admin\\node_modules\\babel-loader\\lib\\index.js!D:\\github\\ziyuanwendang\\flash-vue-admin\\src\\utils\\request.js","dependencies":[{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\src\\utils\\request.js","mtime":1649735864000},{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\babel.config.js","mtime":1649735864000},{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\github\\ziyuanwendang\\flash-vue-admin\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"D:/github/ziyuanwendang/flash-vue-admin/node_modules/@babel/runtime/helpers/interopRequireDefault.js\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nvar _axios = _interopRequireDefault(require(\"axios\"));\n\nvar _elementUi = require(\"element-ui\");\n\nvar _store = _interopRequireDefault(require(\"@/store\"));\n\nvar _auth = require(\"@/utils/auth\");\n\nvar _router = _interopRequireDefault(require(\"@/router\"));\n\n// create an axios instance\nvar service = _axios.default.create({\n  baseURL: process.env.VUE_APP_BASE_API,\n  // url = base url + request url\n  withCredentials: false,\n  // send cookies when cross-domain requests\n  timeout: 25000 // request timeout\n\n}); // request interceptor\n\n\nservice.interceptors.request.use(function (config) {\n  // do something before request is sent\n  var token = (0, _auth.getToken)();\n\n  if (token) {\n    config.headers['Authorization'] = token; // 让每个请求携带自定义token 请根据实际情况自行修改\n  }\n\n  return config;\n}, function (error) {\n  // do something with request error\n  console.log(error); // for debug\n\n  return Promise.reject(error);\n}); // response interceptor\n\nservice.interceptors.response.use(\n/**\n * If you want to get http information such as headers or status\n * Please return  response => response\n*/\n\n/**\n * Determine the request status by custom code\n * Here is just an example\n * You can also judge the status by HTTP Status Code\n */\nfunction (response) {\n  var res = response.data;\n\n  if (response.headers.token) {\n    //如果后台通过header返回token，说明token已经更新，则更新客户端本地token\n    _store.default.dispatch('user/updateToken', {\n      token: response.headers.token\n    });\n  } // if the custom code is not 20000, it is judged as an error.\n\n\n  if (res.code !== 20000) {\n    (0, _elementUi.Message)({\n      message: res.msg || 'error',\n      type: 'error',\n      duration: 5 * 1000\n    }); // 50008: Illegal token; 50012: Other clients logged in; 50014: Token expired;\n\n    if (res.code === 50008 || res.code === 50012 || res.code === 50014) {\n      // to re-login\n      _elementUi.MessageBox.confirm('You have been logged out, you can cancel to stay on this page, or log in again', 'Confirm logout', {\n        confirmButtonText: 'Re-Login',\n        cancelButtonText: 'Cancel',\n        type: 'warning'\n      }).then(function () {\n        _store.default.dispatch('user/resetToken').then(function () {\n          location.reload();\n        });\n      });\n    }\n\n    return Promise.reject(res);\n  } else {\n    return res;\n  }\n}, function (error) {\n  if (error.response.status === 401) {\n    _store.default.dispatch('user/logout').then(function () {\n      _router.default.replace({\n        path: '/login',\n        query: {\n          redirect: _router.default.currentRoute.path\n        }\n      });\n    });\n\n    return;\n  }\n\n  (0, _elementUi.Message)({\n    message: error.message,\n    type: 'error',\n    duration: 5 * 1000\n  });\n  return Promise.reject(error);\n});\nvar _default = service;\nexports.default = _default;",null]}